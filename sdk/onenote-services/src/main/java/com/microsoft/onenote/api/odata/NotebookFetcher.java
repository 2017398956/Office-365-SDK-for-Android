/*******************************************************************************
 Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
 Licensed under the MIT or Apache License; see LICENSE in the source repository
 root for authoritative license information.ï»¿

 **NOTE** This code was generated by a tool and will occasionally be
 overwritten. We welcome comments and issues regarding this code; they will be
 addressed in the generation tool. If you wish to submit pull requests, please
 do so for the templates in that tool.

 This code was generated by Vipr (https://github.com/microsoft/vipr) using
 the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).
 ******************************************************************************/
package com.microsoft.onenote.api.odata;

import com.microsoft.onenote.api.*;
import com.google.common.util.concurrent.*;
import com.microsoft.services.odata.*;
import com.microsoft.services.odata.Readable;
import com.microsoft.services.odata.interfaces.*;

/**
 * The type  NotebookFetcher.
 */
public class NotebookFetcher extends ODataEntityFetcher<Notebook,NotebookOperations> 
                                     implements Readable<Notebook> {

     /**
     * Instantiates a new NotebookFetcher.
     *
     * @param urlComponent the url component
     * @param parent the parent
     */
     public NotebookFetcher(String urlComponent, ODataExecutable parent) {
        super(urlComponent, parent, Notebook.class, NotebookOperations.class);
    }

     /**
     * Add parameter.
     *
     * @param name the name
     * @param value the value
     * @return the fetcher
     */
    public NotebookFetcher addParameter(String name, Object value) {
        addCustomParameter(name, value);
        return this;
    }

     /**
     * Add header.
     *
     * @param name the name
     * @param value the value
     * @return the fetcher
     */
    public NotebookFetcher addHeader(String name, String value) {
        addCustomHeader(name, value);
        return this;
    }

        
     /**
     * Gets sections.
     *
     * @return the sections
     */
    public ODataCollectionFetcher<Section, SectionFetcher, SectionCollectionOperations> getSections() {
        return new ODataCollectionFetcher<Section, SectionFetcher, SectionCollectionOperations>("sections", this, Section.class, SectionCollectionOperations.class);
    }

    /**
     * Gets section.
     *
     * @return the section
     */
    public SectionFetcher getSection(String id){
         return new ODataCollectionFetcher<Section, SectionFetcher, SectionCollectionOperations>("sections", this, Section.class, SectionCollectionOperations.class).getById(id);
    }

     /**
     * Gets section groups.
     *
     * @return the section groups
     */
    public ODataCollectionFetcher<SectionGroup, SectionGroupFetcher, SectionGroupCollectionOperations> getSectionGroups() {
        return new ODataCollectionFetcher<SectionGroup, SectionGroupFetcher, SectionGroupCollectionOperations>("sectionGroups", this, SectionGroup.class, SectionGroupCollectionOperations.class);
    }

    /**
     * Gets section group.
     *
     * @return the section group
     */
    public SectionGroupFetcher getSectionGroup(String id){
         return new ODataCollectionFetcher<SectionGroup, SectionGroupFetcher, SectionGroupCollectionOperations>("sectionGroups", this, SectionGroup.class, SectionGroupCollectionOperations.class).getById(id);
    }

}
